/* Xoá mặc định của browser */
*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
.container{
    margin: auto;
    width: 75%;
}
body{
    font-family: 'Oswald', sans-serif;
}
.title{
    text-align: center;
    margin-bottom: 30px;
}

.title p:first-of-type{
    font-size: 14px;
    color: #e62b4a;
    margin: 10px 0;

}
.title h2{
    font-size: 50px;
}

/* first child, last-child, nth-child => chỉ đúng nếu cái thẻ cùng 1 loại
tìm theo thứ tự thử trước => sau đó mới xác định loại thẻ*/

/* first-of-type, last-of-type, nth-of-type 
lọc các thẻ cùng loại => xác định thứ tự thẻ cần lấy */

.title p:last-of-type{
    font-size: 16px;
    font-weight: bold;
    color: #888888;
}
/* hoặc dùng .title p::nth-of-type(2) */

.title__color p:first-of-type{
    color: #e62b4a;
}


/* HEADER */
header {
    /* position:absolute mất kích thước của thẻ */
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    border-bottom: 1px solid rgba(255, 255, 255, 0.2);
}
header a{
    text-decoration: none;
    color: white;
}
header li{
    display: inline;
    list-style: none;
    margin: 0 10px;
}
header li a{
    text-transform: uppercase;
    font: 20px;
    margin-right: 20px;
}
.header__logo{
    font-size: 32px;
    font-weight: bold;
}
.header__content{
    /* khai báo flex cho thẻ cha trực tiếp với thẻ con cần sắp xếp cho 1 hàng */
    display: flex;
    padding: 30px 0;
    /* justify-content: khoảng cách chiều ngang (thẻ cha flex còn vùng trống/nếu kh còn vùng trống thì dùng paddingthêm khoảng cách)
    align-items: chiều dọc (chỉnh nội dung các thẻ con khi nội dung khác kích thước */
    justify-content: space-between;
    align-items: center;
}

/* CARSOUSEL */
.carousel{
    background-image: url(../img/home_slider.jpg);
    background-position: center;
    background-size: cover;
    height: 700px;

    /* canh giữa vs flex (thẻ cha chỉ có 1 thẻ con trực tiếp) */
    display: flex;
    justify-content: center;
    align-items: center;
}
.carousel__content{
    text-transform: uppercase;
    color: white;
    text-align: center;
}
.carousel__content p{
    font-size: 25px;
    font-weight: 400;
}
.carousel__content h1{
    font-size: 80px;
    line-height: 90px;
}
.carousel__content button{
    background-color: #e62b4a;
    padding: 15px 25px;
    color: white;
    font-size: 15px;
    border: 1px solid #e62b4a ;
    margin-top: 20px;
}
.carousel__icon{
    margin-top: 50px;
}
.carousel__icon i{
    /* animation: tên keyframe , tgian, tốc độ di chuyển, tgian ngưng trc di chuyển, số lần lặp lại  */
    /* animation: name duration timing-function delay iteration-count / direction fill-mode; */
    animation: upDown2 1s linear 0s infinite;
    font-size: 30px;
}


/* SERVICES */
.service{
    background-color: black;
    padding: 100px 0;
}
.service .title h2{
    color: white;
}
#servicesID .slick-dots li button:before{
    color: white;
    font-size: 15px;
}
/* đè code click (có class slick-active) */
#servicesID .slick-dots .slick-active button:before{
    color: #e62e4a;
}


/* tag: 1
classname: 10
id: 100 */
/* C1:  */
.service .service__content .service__item{
    background-color: white;
    text-align: center;
    color: #888888;
    margin:0 10px;
    width: 214px;
    height: 230px;
    position: relative;

    /* căn giữa thẻ con của flex (nhiều con) */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

}
.service__item::before{
    content: "";
    width: 5px;
    height: 0;
    background-color: red;
    position: absolute;
    top: 0;
    right: 0;
    transition: 0.5s;

}
.service__item:hover::before{
    height: 100%;
}
.service__item i{
    font-size: 50px;

}


/* BLOG */
.blogs{
    padding: 100px 0 50px 0;
}
.blogs__content{
    display: grid;

    /* khai báo số lượng cột, kích thước mỗi cột */
    /* grid-template-columns: 25% 25% 25% 25%; (kích thước cột bằng nhau) */
    /* grid-template-columns: repeat(4, 25%); (số lượng cột, kích thước mỗi cột)*/
    /* repeat(4, 1fr): mỗi cột kích thước bằng 1/4 */
    grid-template-columns: repeat(4, 1fr);

    /* khai báo hàng
    + nếu kích thước các hàng bằng nhau kh cần khai báo 
    + chỉ khai báo khi kích thước mỗi hàng khác nhau
    grid-template-rows*/

    /* gap: thêm khoảng cách giữa các thẻ con của grid */
    gap: 30px;
}

    /* C1: cũ => background-image
    background-size: cover
    hình kh hỗ trợ SEO  */

.blogs__item{
    position: relative;
    /* che nội dung con tràn khỏi border thẻ cha
    chống tràn màn hình xuất hiện thanh kéo ngang */
    overflow: hidden;
}
.blogs__item img{
    width: 100%;
    height: 100%;

    /* C2: CSS3 object-fit:cover (chỉ dùng cho thẻ img)*/
    object-fit: cover;
    /* chỉnh màu ảnh tông trầm: fillter*/
    filter: grayscale(50%) contrast(50%);
}
.blogs__item1{
    /* line bắt đầu / line kết thúc
    grid-column: 1 / 3; */ 
    /* line bắt đầu / span số cột muốn gom */
    grid-column: 1 / span 2;

    /* line bắt đầu / span số hàng gom */
    grid-row: 1 / span 2; 


}
.blogs__item10{
    grid-column: 3 / span 2;
    grid-row: 3 / span 2;
}

/* trước hover */
.blogs__overlay{
    position: absolute;

    /* overlay trải đều thẻ cha */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(211, 100, 118, 0.6);
    opacity: 0;
    transition: 0.5s;
}
.blogs__overlay i{
    color: black;
}
.blogs__zoom{
    position: absolute;
    top: 20px;
    right: 20px;
    background-color: white;
    width: 35px;
    height: 35px;
    text-align: center;
    line-height: 35px;
    transform: translateY(20px);
    /* 1000ms = 1s */
    /* transition: all 0.6s */
    transition: 0.5s;
}

/* sau hover : cha đc nhận chuột (hover) => thẻ con thay đổi*/
.blogs__overlay:hover{
    opacity: 1;
}
.blogs__overlay:hover .blogs__zoom{
    transform: translateY(0); 
}

.blogs__icon i{
    font-size: 15px;
}
.blogs__text{
    position: absolute;
    bottom: 25px;
    left: 25px;
    color: white;
    transform: translateY(15px);
    transition: 0.5s;
}
.blogs__overlay:hover .blogs__text{
    transform: translateY(0);
}

/* NUMBER */
.number{
    background-color: black;
    text-align: center;
}
.number__item{
    padding: 70px 0;
    width: 25%;
}
.top{
    font-size: 60px;
    color: white;
}
.bottom{
    color: #888888;
    font-size: 20px;
}
.number__content{
    display: flex;
    justify-content: space-around;
}

/* EXP */
.exp{
    padding: 80px 0;
    background-image: url(../img/bussiness_img_1.jpg);
    background-size: cover;
    background-attachment: fixed;
}
.exp__content video{
    width: 100%;
}
.exp h2{
    color: white;
}
.exp iframe{
    width: 100%;;
    height: 500px;
    border: 3px solid blue;
}

/* CONTACT */
.contact{
    padding: 70px 0;
}
.contact__content{
    display: flex;
}
.contact__map{
    width: 60%;
}
.contact__map iframe{
    width: 100%;
}
.contact__form{
    width:40%;
}
.contact__form form{
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    height: 100%;
}
.contact__form input, .contact__form textarea, .contact__form button{
    padding: 15px;
    margin-left: 15px;
}
.contact__form input:last-of-type{
    background-color: black;
    color: white;
    text-transform: uppercase;
    transition: 0.5s;
}
.contact__form input:last-of-type:hover{
    background-color: #e62b4a;
    border-color: transparent;
}

/* back to top */
.backtotop{
    /* position:fixed đi theo thẻ body và tạo hiệu ứng di chuyển scroll up  */
    position: fixed;
    right: 30px;
    bottom: 30px;
    font-size: 17px;
    padding: 15px 20px;
    color: white;
    font-weight: 900;
    background-color:rgba(0,0,0,0.25);

    /* ẩn thẻ */
    opacity: 0;
}
/* hiện thẻ */
.cd-top--is-visible{
    opacity: 1;
}


/* KEYFRAME : mẫu chuyển động */
/* fromm...to
0%...100% */
@keyframes upDown{
    /* khai báo chuyển động 1 chu kỳ */
    from{
        transform: translateY(0);
        opacity: 0;
    }
    to{
        transform: translateY(50px);
        opacity: 1;
    }
}

@keyframes upDown2 {
    0%{
        transform: translateY(0) rotate(0deg);
        opacity: 0;
    }
    50%{
        transform: translateY(50px) rotate(360deg);
    }
    100%{
        transform: translateY(100px) rotate(720deg);
        opacity: 1;
    }
}